<h2>Containging Component</h2>

Input value: {{this.inputValue}}

<h3>Input helper/component</h3>

Uses two-way binding; we want to get away from that implementation.

<pre><code class="language-handlebars">&lt;Input @value=&#123;&#123;this.inputValue}} /&gt;</code></pre>

<Input @value={{this.inputValue}} />

<h3>Custom setter action</h3>

<pre><code class="language-handlebars">&lt;input
  type="text"
  value=&#123;&#123;this.inputValue}}
  &#123;&#123;on "keyup" this.setInputValue}}
/&gt;</code></pre>

<input
  type="text"
  value={{this.inputValue}}
  {{on "keyup" this.setInputValue}}
/>

<h3>Mut helper</h3>

Complex; probably not worth it

<h3>Set helper addon</h3>

<p><a href="https://github.com/pzuraq/ember-set-helper">https://github.com/pzuraq/ember-set-helper</a></p>

<p>(currently gives an error)</p>

<pre><code class="language-handlebars">&lt;button
  value="Hola!"
  &#123;&#123;on "click" (set this.inputValue (get _ "target.value"))}}
&gt;
  Espa√±ol
&lt;/button&gt;</code></pre>

<h3>Smart event handler helper</h3>

The idea is that this helper creates a function to handle browser events, intelligently inspecting it to see what kind of event it is, and therefore how to properly set the value of the field. For now just hard-coded to pull from <code>event.target.value</code>.

<pre><code class="language-handlebars">&lt;input
  type="text"
  value=&#123;&#123;this.inputValue}}
  &#123;&#123;on "keyup" (smart-set this "inputValue")}}
/&gt;</code></pre>

<input
  type="text"
  value={{this.inputValue}}
  {{on "keyup" (smart-set this "inputValue")}}
/>

<h3>Ref helper</h3>

Creates an object that wraps a value, like a reference, so that it can be gotten and setted. <code>RefInput</code> is a sample input component that is made to handle refs. Final/backwards-compatible API could be considered separately.

<h4>Basic Case</h4>

<pre><code class="language-handlebars">&lt;RefInput
  type="text"
  @ref=&#123;&#123;ref this "inputValue"}}
/&gt;</code></pre>

<RefInput
  type="text"
  @ref={{ref this "inputValue"}}
/>

<h4>Custom Setter</h4>

<pre><code class="language-handlebars">&lt;RefInput
  type="text"
  @ref=&#123;&#123;ref this "inputValue" update=this.trimAndSetInputValue}}
/&gt;</code></pre>

<RefInput
  type="text"
  @ref={{ref this "inputValue" update=this.trimAndSetInputValue}}
/>

<h3>Stateful Form Component</h3>

<Form
  @initialValues={{this.initialValues}}
  @onSubmit={{this.persistInputValue}} as |F|
>
  <p>Outer value: {{this.inputValue}}</p>
  <p>Form state value: {{F.values.inputValue}}</p>
  <RefInput
    type="text"
    @ref={{ref F.values "inputValue"}}
  />
  <button>Save Changes</button>
</Form>
